[{"id":0,"href":"/ru/posts/","title":"Blog","section":"Introduction","content":""},{"id":1,"href":"/ru/posts/clear-file/","title":"How to quickly clear a file","section":"Blog","content":""},{"id":2,"href":"/ru/posts/backup-mongodb/","title":"Backup MongoDB","section":"Blog","content":" Problématique # System d\u0026rsquo;exploitation est Ubuntu MongoDB est déployé dans un conteneur Docker Une Cron tâche est planifiée pour exécuter le backup script Lorsque la base de données est exécutée dans un conteneur, normalment nous n\u0026rsquo;avons pas reinstaller le double MongoDB dans OS, à cette condition, nous avons le choix entre utiliser un conteneur de base de données temporaire ou le conteneur existant pour effectuer la sauvegarde. Le choix entre ces options dépend des préférences personnelles. Dans cet article, nous prenons un conteneur de base de données temporaire.\nVersion Ubuntu\nlsb_release -a LSB Version: core-11.1.0ubuntu4-noarch:security-11.1.0ubuntu4-noarch Distributor ID: Ubuntu Description: Ubuntu 22.04.2 LTS Release: 22.04 Codename: jammy Version Bash\nbash --version GNU bash, version 5.1.16(1)-release (x86_64-pc-linux-gnu) Copyright (C) 2020 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later \u0026lt;http://gnu.org/licenses/gpl.html\u0026gt; Version Docker\nClient: Docker Engine - Community Version: 24.0.1 API version: 1.43 Go version: go1.20.4 Git commit: 6802122 Built: Fri May 19 18:06:21 2023 OS/Arch: linux/amd64 Context: default Server: Docker Engine - Community Engine: Version: 24.0.1 API version: 1.43 (minimum version 1.12) Go version: go1.20.4 Git commit: 463850e Built: Fri May 19 18:06:21 2023 OS/Arch: linux/amd64 Experimental: false containerd: Version: 1.6.21 GitCommit: 3dce8eb055cbb6872793272b4f20ed16117344f8 runc: Version: 1.1.7 GitCommit: v1.1.7-0-g860f061 docker-init: Version: 0.19.0 GitCommit: de40ad0 Version MongoDB\nMongoDB shell version v4.4.19 MongoDB server version: 4.4.19 Étapes # Création du script de sauvegarde # Dans ce script exemple, MongoDB dispose de plusieurs bases de données, chacune étant protégée par ses propres identifiants d\u0026rsquo;utilisateur et mot de passe. Les sauvegardes sont organisées par numéro de semaine et date, stockées dans un dossier à l\u0026rsquo;intérieur du conteneur Docker, puis écrites sur le disque local via un volume. Il est important de noter que pour effectuer la sauvegarde dans un autre conteneur de base de données, le nouveau conteneur doit être connecté au réseau Docker existant.\n#!/bin/bash # display environment information echo \u0026#34;$(date +\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;) - Starting the script...\u0026#34; echo \u0026#34;Current Date and Time: $(date)\u0026#34; echo \u0026#34;Current User: $(whoami)\u0026#34; echo \u0026#34;Current Directory: $(pwd)\u0026#34; echo \u0026#34;Login Shell: $SHELL\u0026#34; echo \u0026#34;\u0026#34; # display system information echo \u0026#34;Operating System: $(uname -s)\u0026#34; echo \u0026#34;Hostname: $(hostname)\u0026#34; echo \u0026#34;Kernel Version: $(uname -r)\u0026#34; echo \u0026#34;Processor Architecture: $(uname -m)\u0026#34; echo \u0026#34;\u0026#34; # def DATE=$(date +%d%m%Y_%H%M) WEEK=$(date +%W) BACKUP_DIR=\u0026#34;/data/db_backup/$WEEK\u0026#34; BACKUP_NAME=\u0026#34;$DATE\u0026#34; # directory permission mkdir -p $BACKUP_DIR/$BACKUP_NAME chown -R 999:999 $BACKUP_DIR/$BACKUP_NAME # define database credentials declare -A credentials=( [\u0026#34;db_name_1\u0026#34;]=\u0026#34;username_1:password_1\u0026#34; [\u0026#34;db_name_2\u0026#34;]=\u0026#34;username_2:password_2\u0026#34; ) # run backup for db_name in \u0026#34;${!credentials[@]}\u0026#34;; do echo \u0026#34;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt; start to backup $db_name \u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026gt;\u0026#34; IFS=\u0026#39;:\u0026#39; read -r username password \u0026lt;\u0026lt;\u0026lt; \u0026#34;${credentials[$db_name]}\u0026#34; docker run -u $(id -u):$(id -g) --rm --network mongodb_mongo_net -v $BACKUP_DIR/$BACKUP_NAME:/workdir -w /workdir \\ mongo:4.4.19 mongodump --out /workdir \\ --db=$db_name --username $username --password $password --host=bewellconnect-mongodb --authenticationDatabase=$db_name echo \u0026#34;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt; end to backup $db_name \u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026lt;\u0026#34; echo \u0026#34;\u0026#34; done echo \u0026#34;$(date +\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;) - Script execution complete.\u0026#34; Création du script de nettoyage # Ce script permet de ne conserver que les sauvegardes d\u0026rsquo;une semaine, en supprimant les autres.\n#!/bin/bash # display environment information echo \u0026#34;$(date +\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;) - Starting the script...\u0026#34; echo \u0026#34;Current Date and Time: $(date)\u0026#34; echo \u0026#34;Current User: $(whoami)\u0026#34; echo \u0026#34;Current Directory: $(pwd)\u0026#34; echo \u0026#34;Login Shell: $SHELL\u0026#34; echo \u0026#34;\u0026#34; # display system information echo \u0026#34;Operating System: $(uname -s)\u0026#34; echo \u0026#34;Hostname: $(hostname)\u0026#34; echo \u0026#34;Kernel Version: $(uname -r)\u0026#34; echo \u0026#34;Processor Architecture: $(uname -m)\u0026#34; echo \u0026#34;\u0026#34; #def BACKUP_DIR=\u0026#34;/data/db_backup\u0026#34; # get current week number current_week=$(date +%W) # run cleanup for dir in \u0026#34;$BACKUP_DIR\u0026#34;/*/; do dir_name=$(basename \u0026#34;$dir\u0026#34;) if [ \u0026#34;${dir_name}\u0026#34; \\\u0026lt; \u0026#34;${current_week}\u0026#34; ]; then echo \u0026#34;delete backup: $dir\u0026#34; rm -rf \u0026#34;$dir\u0026#34; fi done echo \u0026#34;$(date +\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;) - Script execution complete.\u0026#34; Modification des autorisations de script # Les tâches planifiées sont exécutées en tant qu\u0026rsquo;utilisateur qui a créé la tâche planifiée. Les autorisations peuvent varier en fonction de la situation spécifique. Ici, nous donnons à tous les utilisateurs l\u0026rsquo;autorisation d\u0026rsquo;exécuter le script.\nchmod +x script.sh Création du fichier Cron # Il existe de nombreux endroits où vous pouvez placer la configuration Cron. Ici, nous allons créer un fichier appelé \u0026ldquo;db\u0026rdquo; et le placer dans le dossier /etc/cron.d/. Les sorties standard et les erreurs du script seront redirigées vers un fichier journal. Une sauvegarde sera effectuée tous les jours à 3 heures du matin, et une opération de nettoyage sera effectuée tous les dimanches à 4 heures du matin, supprimant les sauvegardes datant d\u0026rsquo;une semaine.\n00 03 * * * root /bin/bash /opt/devops/mongodb/crons/backup_mongodb.sh \u0026gt;\u0026gt; /opt/devops/mongodb/crons/db_backup.log 2\u0026gt;\u0026amp;1 00 04 * * 7 root /bin/bash /opt/devops/mongodb/crons/cleanup_mongodb.sh \u0026gt;\u0026gt; /opt/devops/mongodb/crons/db_cleanup.log 2\u0026gt;\u0026amp;1 "}]